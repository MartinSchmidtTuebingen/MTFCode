Code for the Multi-Template-Fit Projekt in ALICE.

Usage:
- Run "./runAnalysis.sh init" to initialise the MTF project
- Run "./runAnalysis.sh create <PROJECT_NAME> to create a project folder (name should start with LHC to be hidden by gitignore)
- Adjust config.json in analysis folder to your parameters (explanation further down)
- Run "./runAnalysis.sh <PROJECT_NAME>" to run a specific analysis
- Run "./runAnalysis.sh <PROJECT_NAME> -h" to get possible parameters

Fast simulation:



Explanation of config.json:
{
    "config": {
        "remoteBasePath": Base Path where the output of all your MTF analysis is stored
        "referenceRemotePath": Reference data, from remoteBasePath. Use directories or patterns (or combination)
        "referenceShape": Shape of reference data (PureGauss/Asymmetric Shape)
        "doInclusive": If inclusive analysis should run
        "doJets": If jet analysis should run
        "doUE": if UE analysis should run
        "fileNamePattern": Pattern of reference data in sprintf format
        "chargeString": charge string used ("","_neg", "_pos")
        "charge": charge used
        "nSigma": 
        "pathMCsysErrors": path to MC systematic errors from fast simulation
        "pathMCCorrectionFile": correction file to MC systematic error
        "correctGeantFluka": Use geant fluka correction (depends on MC simulation)
        "newGeantFluka": Use "new" geant fluka correction (ommitted if correctGeantFluka is false)
        "scaleStrangeness": 
        "applyMuonCorrection": 
        "constCorrAboveThreshold": 
        "rebinEffObs": 
        "etaAbsCut": Cut for eta in efficiency analysis
        "eps_trigger": 1,
        "sysErrTypeMC": 4,
        "pathMCUEFile": "",
        "efficiencyFileNamePattern": File name pattern of efficiency file (python style)
        "MCRunName": Run name of MC analysis
        "systematicsInclusive": Systematics used for inclusive analysis
        "systematicsJets": Systematics used for jet analysis
        "systematicsUE": [
            "UEMethod"
        ],
        "centralities": Used centralities string
        "jetPts": Used jetPt string
        "modesInclusive": modes for inclusive analysis
        "modesJets": modes for jet analysis
        "centString": "0;100;60;100;0;10",
        "jetPtString": "05;10;10;15;15;20;20;30",
        "modesInclusiveString": "Pt",
        "modesJetsString": "Pt;Z"
    },
    "systematics": {
        "nameOfSystematic": {
            "sourcePath": Remote source path with pattern
            "savePath": Save path
            "outputFilePattern": File pattern of output (printf-style)
            "refHistTitle": Title of reference
            "inputs": [
              {"pattern":input file pattern (printf style), "histTitle":Title of histogram}
            ]
        }
    }
}


